import java_cup.runtime.*;
import java.io.*;
import java.util.Scanner;

parser code {:
	public static void main(String args[]) throws Exception {
		System.out.print("Podaj nazwe pliku: ");
		Scanner scanner = new Scanner(System.in);
		String filename = scanner.next();
		scanner.close();

		FileInputStream stream = new java.io.FileInputStream(filename);
		Reader reader = new java.io.InputStreamReader(stream);

		try {
			new parser(new Yylex(reader)).parse();
		}
		catch (Exception e) {
			System.err.println("ERROR Analisis INCORRECTO !");
			System.exit(1);
		}
		System.out.println("Analisis CORRECTO");
	}
:}


terminal SEMICOLON, // ;
	PAREN_L, PAREN_R, // ( )
	BRAC_L, BRAC_R, // { }
	UMINUS, // -123
	T_VOID, T_BOOL, T_INT, // types
	RETURN, WHILE, FOR, CLASS, STATIC, PUBLIC, // functional
	PLUS, MINUS, MUL, DIV, // aritmethitical
	GREATER, G_EQUAL, LESS, L_EQUAL, EQUAL, NOT_EQUAL, // relational
	AND, OR, NOT; // logical
terminal String VARIABLE;
terminal Integer NUMBER;
terminal boolean FLAG;

non terminal declaration, cmd, expr_part, expr_list;
non terminal var_assign, loop, func_call, func_dec, class_dec;

precedence left PLUS, MINUS;
precedence left MUL, DIV;
precedence left UMINUS;

expr_list ::= expr_list expr_part | expr_part;
expr_part ::= cmd SEMICOLON
	| declaration BRAC_L cmd BRAC_R;

cmd ::= var_assign | func_call;
declaration ::= class_dec | func_dec | loop;

var_assign ::= ;
func_call ::= ;
class_dec ::= ;
func_dec ::= ;
loop ::= ;
